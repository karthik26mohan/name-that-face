{"ast":null,"code":"import { FETCH_ALL_BREEDS, PICK_10_BREEDS, GET_BREED_IMAGES, GET_4_OPTIONS, SET_USER_SELECTED_BREED } from '../actions/types';\nexport default ((state = {}, action) => {\n  console.log(action.type);\n\n  switch (action.type) {\n    case FETCH_ALL_BREEDS:\n      console.log('FetchAllBreeds ran');\n      return { ...state,\n        dogBreeds: action.payload\n      };\n\n    case PICK_10_BREEDS:\n      const tenBreeds = pick10Breeds(state.dogBreeds);\n      return { ...state,\n        tenBreeds: tenBreeds\n      };\n\n    case GET_BREED_IMAGES:\n      return { ...state,\n        breedImages: action.payload\n      };\n\n    case GET_4_OPTIONS:\n      const options = pick4Options(state.dogBreeds, state.tenBreeds, action.payload);\n      return { ...state,\n        fourOptions: options.fourOptionsArray,\n        breed: options.correctOption\n      };\n\n    case SET_USER_SELECTED_BREED:\n      return { ...state,\n        userSelectedBreed: action.payload\n      };\n\n    default:\n      return state;\n  }\n});\n\nconst pick4Options = (allBreeds, tenBreeds, currentStep) => {\n  let fourOptionsArray = []; // Current Breed String\n\n  const breedKeys = Object.keys(tenBreeds);\n  let breedStr = breedKeys[currentStep];\n  let correctOption = breedStr; // Camel case it eventually.\n\n  if (tenBreeds[breedStr].length > 0) {\n    correctOption = tenBreeds[breedStr][0] + ' ' + correctOption;\n  }\n\n  fourOptionsArray.push(correctOption); // Pick 3 more options\n\n  const allBreedKeys = Object.keys(allBreeds);\n\n  for (let i = 0; i < 3; i++) {\n    let randomNumber = Math.floor(Math.random() * allBreedKeys.length);\n    let breed = allBreedKeys[randomNumber];\n\n    if (allBreeds[breed].length > 0) {\n      breed = allBreeds[breed][0] + ' ' + breed;\n    }\n\n    fourOptionsArray.push(breed);\n  }\n\n  return {\n    fourOptionsArray,\n    correctOption\n  };\n};\n\nconst pick10Breeds = allBreeds => {\n  console.log('allBreeds: ');\n  console.log(allBreeds);\n  let tenBreeds = {};\n\n  if (allBreeds) {\n    let keys = Object.keys(allBreeds);\n\n    for (let i = 0; i < 10; i++) {\n      let index = Math.floor(Math.random() * keys.length);\n      tenBreeds[keys[index]] = allBreeds[keys[index]];\n    }\n  }\n\n  return tenBreeds;\n};","map":{"version":3,"sources":["/Users/karthikmohan/Documents/projects/name-that-face/src/reducers/dogReducers.js"],"names":["FETCH_ALL_BREEDS","PICK_10_BREEDS","GET_BREED_IMAGES","GET_4_OPTIONS","SET_USER_SELECTED_BREED","state","action","console","log","type","dogBreeds","payload","tenBreeds","pick10Breeds","breedImages","options","pick4Options","fourOptions","fourOptionsArray","breed","correctOption","userSelectedBreed","allBreeds","currentStep","breedKeys","Object","keys","breedStr","length","push","allBreedKeys","i","randomNumber","Math","floor","random","index"],"mappings":"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","sourcesContent":["import { \n    FETCH_ALL_BREEDS,\n    PICK_10_BREEDS,\n    GET_BREED_IMAGES, \n    GET_4_OPTIONS,\n    SET_USER_SELECTED_BREED\n} from '../actions/types';\n\nexport default (state = {}, action) => {\n    console.log(action.type);\n    switch(action.type) {\n        case FETCH_ALL_BREEDS: \n            console.log('FetchAllBreeds ran');\n            return { ...state, dogBreeds: action.payload };\n        case PICK_10_BREEDS:\n            const tenBreeds = pick10Breeds(state.dogBreeds);\n            return { ...state, tenBreeds: tenBreeds };\n        case GET_BREED_IMAGES:\n            return { ...state, breedImages: action.payload };\n        case GET_4_OPTIONS:\n            const options = pick4Options(state.dogBreeds, state.tenBreeds, action.payload); \n            return { ...state, fourOptions: options.fourOptionsArray, breed: options.correctOption };\n        case SET_USER_SELECTED_BREED:\n            return { ...state, userSelectedBreed: action.payload }\n        default:\n            return state;\n    }\n}\n\nconst pick4Options = (allBreeds, tenBreeds, currentStep) => {\n    let fourOptionsArray = [];\n    // Current Breed String\n    const breedKeys = Object.keys(tenBreeds);\n    let breedStr = breedKeys[currentStep];\n    let correctOption = breedStr; // Camel case it eventually.\n    if(tenBreeds[breedStr].length>0){\n        correctOption = tenBreeds[breedStr][0] + ' ' + correctOption;\n    }\n    fourOptionsArray.push(correctOption);\n\n    // Pick 3 more options\n    const allBreedKeys = Object.keys(allBreeds);\n    for(let i=0; i<3; i++) {\n        let randomNumber = Math.floor(Math.random() * allBreedKeys.length);\n        let breed = allBreedKeys[randomNumber];\n        if(allBreeds[breed].length>0){\n            breed = allBreeds[breed][0] + ' ' + breed;\n        }\n        fourOptionsArray.push(breed);\n    }\n    return { fourOptionsArray, correctOption };\n}\n\nconst pick10Breeds = (allBreeds) => {\n    console.log('allBreeds: ');\n    console.log(allBreeds);\n    let tenBreeds = {};\n    if(allBreeds) {\n        let keys = Object.keys(allBreeds);\n        for(let i=0; i<10; i++) {\n            let index = Math.floor(Math.random() * keys.length);\n            tenBreeds[keys[index]] = allBreeds[keys[index]];\n        }\n    }\n    return tenBreeds;\n}"]},"metadata":{},"sourceType":"module"}