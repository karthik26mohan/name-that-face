{"ast":null,"code":"import { FETCH_ALL_BREEDS, PICK_10_BREEDS, GET_BREED_IMAGES, GET_4_OPTIONS } from '../actions/types';\nexport default ((state = {}, action) => {\n  console.log(action.type);\n\n  switch (action.type) {\n    case FETCH_ALL_BREEDS:\n      console.log('FetchAllBreeds ran');\n      return { ...state,\n        dogBreeds: action.payload\n      };\n\n    case PICK_10_BREEDS:\n      const tenBreeds = pick10Breeds(state.dogBreeds);\n      return { ...state,\n        tenBreeds: tenBreeds\n      };\n\n    case GET_BREED_IMAGES:\n      return { ...state,\n        breedImages: action.payload\n      };\n\n    case GET_4_OPTIONS:\n      const fourOptions = pick4Options(state.dogBreeds, action.payload);\n      return { ...state,\n        fourOptions: fourOptions\n      };\n\n    default:\n      return state;\n  }\n});\n\nconst fourOptions = (allBreeds, currentStep) => {};\n\nconst pick10Breeds = allBreeds => {\n  console.log('allBreeds: ');\n  console.log(allBreeds);\n  let tenBreeds = {};\n\n  if (allBreeds) {\n    let keys = Object.keys(allBreeds);\n\n    for (let i = 0; i < 10; i++) {\n      let index = Math.floor(Math.random() * keys.length);\n      tenBreeds[keys[index]] = allBreeds[keys[index]];\n    }\n  }\n\n  return tenBreeds;\n};","map":{"version":3,"sources":["/Users/karthikmohan/Documents/projects/name-that-face/src/reducers/dogReducers.js"],"names":["FETCH_ALL_BREEDS","PICK_10_BREEDS","GET_BREED_IMAGES","GET_4_OPTIONS","state","action","console","log","type","dogBreeds","payload","tenBreeds","pick10Breeds","breedImages","fourOptions","pick4Options","allBreeds","currentStep","keys","Object","i","index","Math","floor","random","length"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,cAFJ,EAGIC,gBAHJ,EAGsBC,aAHtB,QAIO,kBAJP;AAMA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;;AACA,UAAOH,MAAM,CAACG,IAAd;AACI,SAAKR,gBAAL;AACIM,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,aAAO,EAAE,GAAGH,KAAL;AAAYK,QAAAA,SAAS,EAAEJ,MAAM,CAACK;AAA9B,OAAP;;AACJ,SAAKT,cAAL;AACI,YAAMU,SAAS,GAAGC,YAAY,CAACR,KAAK,CAACK,SAAP,CAA9B;AACA,aAAO,EAAE,GAAGL,KAAL;AAAYO,QAAAA,SAAS,EAAEA;AAAvB,OAAP;;AACJ,SAAKT,gBAAL;AACI,aAAO,EAAE,GAAGE,KAAL;AAAYS,QAAAA,WAAW,EAAER,MAAM,CAACK;AAAhC,OAAP;;AACJ,SAAKP,aAAL;AACI,YAAMW,WAAW,GAAGC,YAAY,CAACX,KAAK,CAACK,SAAP,EAAkBJ,MAAM,CAACK,OAAzB,CAAhC;AACA,aAAO,EAAE,GAAGN,KAAL;AAAYU,QAAAA,WAAW,EAAEA;AAAzB,OAAP;;AACJ;AACI,aAAOV,KAAP;AAbR;AAeH,CAjBD;;AAmBA,MAAMU,WAAW,GAAG,CAACE,SAAD,EAAYC,WAAZ,KAA4B,CAE/C,CAFD;;AAIA,MAAML,YAAY,GAAII,SAAD,IAAe;AAChCV,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYS,SAAZ;AACA,MAAIL,SAAS,GAAG,EAAhB;;AACA,MAAGK,SAAH,EAAc;AACV,QAAIE,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,SAAZ,CAAX;;AACA,SAAI,IAAII,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,EAAf,EAAmBA,CAAC,EAApB,EAAwB;AACpB,UAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,IAAI,CAACO,MAAhC,CAAZ;AACAd,MAAAA,SAAS,CAACO,IAAI,CAACG,KAAD,CAAL,CAAT,GAAyBL,SAAS,CAACE,IAAI,CAACG,KAAD,CAAL,CAAlC;AACH;AACJ;;AACD,SAAOV,SAAP;AACH,CAZD","sourcesContent":["import { \n    FETCH_ALL_BREEDS,\n    PICK_10_BREEDS,\n    GET_BREED_IMAGES, GET_4_OPTIONS\n} from '../actions/types';\n\nexport default (state = {}, action) => {\n    console.log(action.type);\n    switch(action.type) {\n        case FETCH_ALL_BREEDS: \n            console.log('FetchAllBreeds ran');\n            return { ...state, dogBreeds: action.payload };\n        case PICK_10_BREEDS:\n            const tenBreeds = pick10Breeds(state.dogBreeds);\n            return { ...state, tenBreeds: tenBreeds };\n        case GET_BREED_IMAGES:\n            return { ...state, breedImages: action.payload };\n        case GET_4_OPTIONS:\n            const fourOptions = pick4Options(state.dogBreeds, action.payload); \n            return { ...state, fourOptions: fourOptions };\n        default:\n            return state;\n    }\n}\n\nconst fourOptions = (allBreeds, currentStep) => {\n\n}\n\nconst pick10Breeds = (allBreeds) => {\n    console.log('allBreeds: ');\n    console.log(allBreeds);\n    let tenBreeds = {};\n    if(allBreeds) {\n        let keys = Object.keys(allBreeds);\n        for(let i=0; i<10; i++) {\n            let index = Math.floor(Math.random() * keys.length);\n            tenBreeds[keys[index]] = allBreeds[keys[index]];\n        }\n    }\n    return tenBreeds;\n}"]},"metadata":{},"sourceType":"module"}