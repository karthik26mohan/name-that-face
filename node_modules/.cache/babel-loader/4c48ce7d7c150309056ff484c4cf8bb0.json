{"ast":null,"code":"import { FETCH_ALL_BREEDS, PICK_10_BREEDS, GET_BREED_IMAGES, GET_4_OPTIONS } from '../actions/types';\nexport default ((state = {}, action) => {\n  console.log(action.type);\n\n  switch (action.type) {\n    case FETCH_ALL_BREEDS:\n      console.log('FetchAllBreeds ran');\n      return { ...state,\n        dogBreeds: action.payload\n      };\n\n    case PICK_10_BREEDS:\n      const tenBreeds = pick10Breeds(state.dogBreeds);\n      return { ...state,\n        tenBreeds: tenBreeds\n      };\n\n    case GET_BREED_IMAGES:\n      return { ...state,\n        breedImages: action.payload\n      };\n\n    case GET_4_OPTIONS:\n      const fourOptions = pick4Options(state.dogBreeds, state.tenBreeds, action.payload);\n      return { ...state,\n        fourOptions: fourOptions\n      };\n\n    default:\n      return state;\n  }\n});\n\nconst pick4Options = (allBreeds, tenBreeds, currentStep) => {\n  let fourOptionsArray = []; // Current Breed String\n\n  const breedKeys = Object.keys(tenBreeds);\n  let breedStr = breedKeys[currentStep];\n  let correctOption = breedStr; // Camel case it eventually.\n\n  if (tenBreeds[breedStr].length > 0) {\n    correctOption += tenBreeds[breedStr][0];\n  }\n\n  fourOptionsArray.push(correctOption); // Pick 3 more options\n\n  const allBreedKeys = Object.keys(allBreeds);\n\n  for (let i = 0; i < 3; i++) {\n    let randomNumber = Math.floor(Math.random() * allBreedKeys.length);\n    let breed = allBreeds[allBreedKeys[randomNumber]];\n\n    if (allBreeds[breed].length > 0) {\n      breed += '' + allBreeds[breed][0];\n    }\n\n    fourOptionsArray.push(breed);\n  }\n\n  return fourOptionsArray;\n};\n\nconst pick10Breeds = allBreeds => {\n  console.log('allBreeds: ');\n  console.log(allBreeds);\n  let tenBreeds = {};\n\n  if (allBreeds) {\n    let keys = Object.keys(allBreeds);\n\n    for (let i = 0; i < 10; i++) {\n      let index = Math.floor(Math.random() * keys.length);\n      tenBreeds[keys[index]] = allBreeds[keys[index]];\n    }\n  }\n\n  return tenBreeds;\n};","map":{"version":3,"sources":["/Users/karthikmohan/Documents/projects/name-that-face/src/reducers/dogReducers.js"],"names":["FETCH_ALL_BREEDS","PICK_10_BREEDS","GET_BREED_IMAGES","GET_4_OPTIONS","state","action","console","log","type","dogBreeds","payload","tenBreeds","pick10Breeds","breedImages","fourOptions","pick4Options","allBreeds","currentStep","fourOptionsArray","breedKeys","Object","keys","breedStr","correctOption","length","push","allBreedKeys","i","randomNumber","Math","floor","random","breed","index"],"mappings":"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","sourcesContent":["import { \n    FETCH_ALL_BREEDS,\n    PICK_10_BREEDS,\n    GET_BREED_IMAGES, GET_4_OPTIONS\n} from '../actions/types';\n\nexport default (state = {}, action) => {\n    console.log(action.type);\n    switch(action.type) {\n        case FETCH_ALL_BREEDS: \n            console.log('FetchAllBreeds ran');\n            return { ...state, dogBreeds: action.payload };\n        case PICK_10_BREEDS:\n            const tenBreeds = pick10Breeds(state.dogBreeds);\n            return { ...state, tenBreeds: tenBreeds };\n        case GET_BREED_IMAGES:\n            return { ...state, breedImages: action.payload };\n        case GET_4_OPTIONS:\n            const fourOptions = pick4Options(state.dogBreeds, state.tenBreeds, action.payload); \n            return { ...state, fourOptions: fourOptions };\n        default:\n            return state;\n    }\n}\n\nconst pick4Options = (allBreeds, tenBreeds, currentStep) => {\n    let fourOptionsArray = [];\n    // Current Breed String\n    const breedKeys = Object.keys(tenBreeds);\n    let breedStr = breedKeys[currentStep];\n    let correctOption = breedStr; // Camel case it eventually.\n    if(tenBreeds[breedStr].length>0){\n        correctOption += tenBreeds[breedStr][0];\n    }\n    fourOptionsArray.push(correctOption);\n\n    // Pick 3 more options\n    const allBreedKeys = Object.keys(allBreeds);\n    for(let i=0; i<3; i++) {\n        let randomNumber = Math.floor(Math.random() * allBreedKeys.length);\n        let breed = allBreeds[allBreedKeys[randomNumber]];\n        if(allBreeds[breed].length>0){\n            breed += '' + allBreeds[breed][0];\n        }\n        fourOptionsArray.push(breed);\n    }\n    return fourOptionsArray;\n}\n\nconst pick10Breeds = (allBreeds) => {\n    console.log('allBreeds: ');\n    console.log(allBreeds);\n    let tenBreeds = {};\n    if(allBreeds) {\n        let keys = Object.keys(allBreeds);\n        for(let i=0; i<10; i++) {\n            let index = Math.floor(Math.random() * keys.length);\n            tenBreeds[keys[index]] = allBreeds[keys[index]];\n        }\n    }\n    return tenBreeds;\n}"]},"metadata":{},"sourceType":"module"}